<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEAIACoEAAANgAAABgYAAABACAAiAkAAN4QAAAQEAAAAQAgAGgEAABmGgAAKAAAACAA
        AABAAAAAAQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAIAAAADAAAAAwAA
        AAIAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAcAAAALAAAADQAAABAAAAARAAAAEwAA
        ABMAAAATAAAAEwAAABIAAAARAAAADwAAAAsAAAAGAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABgAAAAsAAAAPAAAAEwAAABYAAAAZAAAAHAAA
        AB4AAAAgAAAAIQAAACEAAAAgAAAAHwAAAB0AAAAbAAAAGAAAABQAAAARAAAADQAAAAcAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAkAAAAOAAAAEwAAABcAe5VZAJ7C3ACd
        v9oAj7CiAGmAXAAFCy8AAAAuAAAALgAAAC0AAAAsAAAAKQAAACYAAAAiAAAAHgAAABkAAAAVAAAAEAAA
        AAsAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAIAAAADQAAABMAAAAYAGF1PwGg
        xPVcy9//Ub/X/0fF3P0Wqcr4AZ/C+ACJqK0ARVNZAAAAOgAAADcAAAAzAAAALwAAACoAAAAlAAAAIAAA
        ABsAAAAVAAAAEAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAoAAAAPAAAAFQAJ
        CRsAncHZQsjd/XXP4f9EzOD/YdHk/wymx/942Of/Vcnd/AOgxf4Ak7LJAEdYXQAAADgAAAAzAAAALQAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAWpEzCF6U9ZDA3v8/ksb/D3u//1Gg0f9LlcT/A1ySywAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAANak7peoMf+Hm2e/xlomv8SaJ7/l8bj/xlsoPQDWo5PAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlqR83qw0f8oc6D/7O7u/xlomv9rp83/A1uS5QCA
        gAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXJPkk8He/xZpnf8SZJf/L3mn/y58
        q/cDWpFmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARbk4YygbD4ncfi/4++
        2/9Rlb/7A1qR3QBVjgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEmSBwNb
        kqYDW5HvA1qR6wJakqEAVZIVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD///AAD/+A
        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
        rEHAH6xBAP+sQQD/rEEA/6xBB/+sQQ//rEE=
</value>
  </data>
</root>